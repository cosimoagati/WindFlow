
wf/accumulator.hpp,1070
#define ACCUMULATOR_H35,1467
namespace wf49,1733
template<typename tuple_t,59,2000
class Accumulator:Accumulator60,2046
	tuple_t tmp;75,2625
	bool used;80,2846
	class Accumulator_Node:Accumulator_Node82,2947
		acc_func_t acc_func;85,3025
		rich_acc_func_t rich_acc_func;86,3072
		closing_func_t closing_func;87,3134
		std::string name;88,3185
		bool isRich;89,3250
		RuntimeContext context;90,3366
		result_t init_value;91,3410
		struct Key_Descriptor93,3503
			result_t result;95,3531
			Key_Descriptor(98,3570
		std::unordered_map<std::unordered_map103,3704
		std::unordered_map<key_t, Key_Descriptor> keyMap;103,3704
		volatile unsigned long startTD,108,3863
		volatile unsigned long startTD, startTS,108,3863
		volatile unsigned long startTD, startTS, endTD,108,3863
		volatile unsigned long startTD, startTS, endTD, endTS;108,3863
		Accumulator_Node(114,3992
		Accumulator_Node(128,4441
		int svc_init(142,4819
		result_t *svc(svc173,5701
		void svc_end(212,6951
	Accumulator(241,8109
	Accumulator(284,9700
	bool isUsed(322,10923

wf/basic.hpp,4553
#define BASIC_H31,1183
namespace wf 42,1350
inline unsigned long current_time_usecs(51,1631
inline unsigned long current_time_nsecs(65,2047
#define DEFAULT_VECTOR_CAPACITY 73,2213
#define DEFAULT_BATCH_SIZE_TB 74,2312
#define DEFAULT_CUDA_NUM_THREAD_BLOCK 75,2434
#define gpuErrChk(76,2538
enum class Mode 79,2651
enum class Mode { DEFAULT,79,2651
enum class Mode { DEFAULT, DETERMINISTIC 79,2651
enum win_type_t 82,2722
enum win_type_t { CB,82,2722
enum win_type_t { CB, TB 82,2722
enum opt_level_t 85,2784
enum opt_level_t { LEVEL0,85,2784
enum opt_level_t { LEVEL0, LEVEL1,85,2784
enum opt_level_t { LEVEL0, LEVEL1, LEVEL2 85,2784
#define STRINGIFY(90,2862
#define XSTRINGIFY(91,2897
enum win_event_t 94,2950
enum win_event_t { OLD,94,2950
enum win_event_t { OLD, IN,94,2950
enum win_event_t { OLD, IN, DELAYED,94,2950
enum win_event_t { OLD, IN, DELAYED, FIRED,94,2950
enum win_event_t { OLD, IN, DELAYED, FIRED, BATCHED 94,2950
enum ordering_mode_t 97,3034
enum ordering_mode_t { ID,97,3034
enum ordering_mode_t { ID, TS,97,3034
enum ordering_mode_t { ID, TS, TS_RENUMBERING 97,3034
enum role_t 100,3140
enum role_t { SEQ,100,3140
enum role_t { SEQ, PLQ,100,3140
enum role_t { SEQ, PLQ, WLQ,100,3140
enum role_t { SEQ, PLQ, WLQ, MAP,100,3140
enum role_t { SEQ, PLQ, WLQ, MAP, REDUCE 100,3140
enum pattern_t 103,3235
enum pattern_t {SEQ_CPU,SEQ_CPU103,3235
enum pattern_t {SEQ_CPU, SEQ_GPU,103,3235
enum pattern_t {SEQ_CPU, SEQ_GPU, KF_CPU,103,3235
enum pattern_t {SEQ_CPU, SEQ_GPU, KF_CPU, KF_GPU,103,3235
enum pattern_t {SEQ_CPU, SEQ_GPU, KF_CPU, KF_GPU, WF_CPU,103,3235
enum pattern_t {SEQ_CPU, SEQ_GPU, KF_CPU, KF_GPU, WF_CPU, WF_GPU,103,3235
enum pattern_t {SEQ_CPU, SEQ_GPU, KF_CPU, KF_GPU, WF_CPU, WF_GPU, PF_CPU,103,3235
		PF_GPU,104,3309
		PF_GPU, WMR_CPU,104,3309
		PF_GPU, WMR_CPU, WMR_GPU}WMR_GPU104,3309
#define DEFAULT_COLOR 107,3379
#define BLACK 108,3418
#define RED 109,3458
#define GREEN 110,3497
#define YELLOW 111,3537
#define BLUE 112,3577
#define MAGENTA 113,3617
#define CYAN 114,3657
#define WHITE 115,3697
#define BOLDBLACK 116,3737
#define BOLDRED 117,3779
#define BOLDGREEN 118,3821
#define BOLDYELLOW 119,3863
#define BOLDBLUE 120,3905
#define BOLDMAGENTA 121,3947
#define BOLDCYAN 122,3989
#define BOLDWHITE 123,4031
struct PatternConfig 126,4140
	size_t id_outer;127,4163
	size_t n_outer;128,4221
	uint64_t slide_outer;129,4286
	size_t id_inner;130,4353
	size_t n_inner;131,4411
	uint64_t slide_inner;132,4476
	PatternConfig(135,4562
	PatternConfig(140,4687
template<typename tuple_t,156,5127
template<typename tuple_t,160,5243
template<typename tuple_t, typename result_t,160,5243
template<typename tuple_t,172,5563
template<typename tuple_t,176,5677
template<typename tuple_t,180,5791
template<typename tuple_t, typename result_t,180,5791
template<typename tuple_t, typename result_t, typename input_t=180,5791
template<typename tuple_t,184,5928
template<typename tuple_t, typename result_t,184,5928
template<typename tuple_t, typename result_t, typename input_t=184,5928
template<typename tuple_t,188,6066
template<typename tuple_t,192,6179
template<typename tuple_t, typename result_t,192,6179
template<typename tuple_t, typename result_t, typename input_t=192,6179
template<typename tuple_t,196,6323
template<typename tuple_t, typename result_t,196,6323
template<typename tuple_t, typename result_t, typename input_t=196,6323
template<typename tuple_t,200,6469
template<typename tuple_t, typename result_t,200,6469
template<typename tuple_t, typename result_t, typename fun_t,200,6469
template<typename tuple_t, typename result_t, typename fun_t, typename input_t=200,6469
template<typename tuple_t,204,6630
template<typename tuple_t, typename result_t,204,6630
template<typename tuple_t, typename result_t, typename fun_t,204,6630
template<typename tuple_t, typename result_t, typename fun_t, typename input_t=204,6630
template<typename tuple_t,208,6792
template<typename tuple_t, typename result_t,208,6792
template<typename tuple_t,212,6929
template<typename tuple_t, typename result_t,212,6929
template<typename tuple_t, typename result_t, typename fun_t,212,6929
template<typename tuple_t, typename result_t, typename fun_t, typename input_t=212,6929
template<typename tuple_t,216,7097
template<typename tuple_t, typename result_t,216,7097
template<typename tuple_t, typename result_t, typename fun_t,216,7097
template<typename tuple_t, typename result_t, typename fun_t, typename input_t=216,7097

wf/basic_emitter.hpp,172
#define BASIC_EMITTER_H31,1221
namespace wf 37,1305
class Basic_Emitter:Basic_Emitter40,1344
	virtual ~Basic_Emitter(44,1411
	virtual std::vector<std::vector56,1680

wf/broadcast_emitter.hpp,142
#define BROADCASTNODE_H30,1184
namespace wf 38,1323
template<typename tuple_t,41,1366
template<typename tuple_t, typename input_t=41,1366

wf/builders.hpp,16252
#define BUILDERS_H30,1161
namespace wf40,1319
class Source_Builder50,1507
	F_t func;53,1539
	Source_Builder(68,2005
	Source_Builder<F_t>& withName(76,2212
	Source_Builder<F_t>& withParallelism(88,2464
	Source_Builder<F_t>& withClosingFunction(100,2762
	source_t build(112,3043
	source_t *build_ptr(build_ptr123,3314
	std::unique_ptr<source_t> build_unique(133,3524
class Filter_Builder148,3832
	F_t func;151,3864
	using filter_t 153,3930
	using closing_func_t 155,4018
	using routing_func_t 157,4182
	std::uint64_t pardegree 158,4260
	std::string name 159,4290
	bool isKeyed 160,4330
	closing_func_t closing_func 161,4353
	routing_func_t routing_func 162,4427
	Filter_Builder(170,4617
	Filter_Builder<F_t>& withName(178,4824
	Filter_Builder<F_t>& withParallelism(190,5076
	Filter_Builder<F_t>& enable_KeyBy(201,5283
	Filter_Builder<F_t>& withClosingFunction(213,5548
	filter_t build(225,5826
	filter_t *build_ptr(build_ptr240,6222
	std::unique_ptr<filter_t> build_unique(254,6540
class Map_Builder275,6980
	F_t func;278,7009
	using map_t 280,7075
	using closing_func_t 283,7192
	using routing_func_t 286,7360
	std::uint64_t pardegree 287,7438
	std::string name 288,7468
	bool isKeyed 289,7505
	closing_func_t closing_func 290,7528
	routing_func_t routing_func 291,7602
	Map_Builder(299,7790
	Map_Builder<F_t>& withName(307,7991
	Map_Builder<F_t>& withParallelism(319,8234
	Map_Builder<F_t>& enable_KeyBy(330,8438
	Map_Builder<F_t>& withClosingFunction(342,8700
	map_t build(354,8972
	map_t *build_ptr(build_ptr369,9357
	std::unique_ptr<map_t> build_unique(383,9657
class MapGPU_Builder399,10074
	F_t func;402,10106
	using mapgpu_t 404,10173
			     decltype(405,10227
	using closing_func_t 407,10305
	using routing_func_t 410,10474
	std::uint64_t pardegree 412,10560
	std::size_t max_buffered_tuples 414,10627
	std::size_t gpu_blocks 415,10667
	std::size_t gpu_threads_per_block 416,10696
	bool is_keyed 417,10738
	closing_func_t closing_func 419,10763
	routing_func_t routing_func 420,10836
	MapGPU_Builder(428,11024
	withName(437,11252
	withParallelism(450,11506
	enable_KeyBy(462,11717
	disable_KeyBy(474,11893
	withKeyBy(487,12139
	withClosingFunction(500,12429
        withMaxBufferedTuples(513,12745
	withGPUBlocks(526,13097
	withGPUThreadsPerBlock(539,13399
	build(552,13701
	build_ptr(572,14213
	build_unique(590,14706
class FlatMap_Builder616,15289
	F_t func;619,15322
	using flatmap_t 621,15388
	using closing_func_t 624,15514
	using routing_func_t 626,15678
	std::uint64_t pardegree 627,15756
	std::string name 628,15786
	bool isKeyed 629,15827
	closing_func_t closing_func 630,15850
	routing_func_t routing_func 631,15924
	FlatMap_Builder(639,16112
	FlatMap_Builder<F_t>& withName(647,16321
	FlatMap_Builder<F_t>& withParallelism(659,16576
	FlatMap_Builder<F_t>& enable_KeyBy(670,16784
	FlatMap_Builder<F_t>& withClosingFunction(682,17050
	flatmap_t build(694,17334
	flatmap_t *build_ptr(build_ptr709,17736
	std::unique_ptr<flatmap_t> build_unique(724,18070
class Accumulator_Builder746,18551
	F_t func;749,18588
	using accumulator_t 751,18654
	using closing_func_t 754,18789
	using routing_func_t 756,18953
	using result_t 758,19082
	std::uint64_t pardegree 759,19130
	std::string name 760,19160
	result_t init_value;761,19205
	closing_func_t closing_func 762,19227
	routing_func_t routing_func 763,19301
	Accumulator_Builder(771,19485
	Accumulator_Builder<F_t>& withName(779,19702
	Accumulator_Builder<F_t>& withInitialValue(793,20061
	Accumulator_Builder<F_t>& withParallelism(805,20351
	Accumulator_Builder<F_t>& withClosingFunction(817,20654
	accumulator_t build(829,20950
	accumulator_t *build_ptr(build_ptr842,21285
	std::unique_ptr<accumulator_t> build_unique(854,21553
class WinSeq_Builder871,21930
	F_t func;874,21962
	using winseq_t 876,22028
	using closing_func_t 879,22152
	std::uint64_t win_len 880,22214
	std::uint64_t slide_len 881,22242
	std::uint64_t triggering_delay 882,22272
	win_type_t winType 883,22309
	std::string name 884,22335
	closing_func_t closing_func 885,22372
	WinSeq_Builder(893,22548
	WinSeq_Builder<F_t>& withCBWindows(902,22818
	WinSeq_Builder<F_t>& withTBWindows(919,23270
	WinSeq_Builder<F_t>& withName(936,23790
	WinSeq_Builder<F_t>& withClosingFunction(948,24066
	winseq_t build(960,24349
	winseq_t *build_ptr(build_ptr975,24750
	std::unique_ptr<winseq_t> build_unique(989,25106
class WinSeqGPU_Builder1010,25587
	F_t func;1013,25622
	using winseq_gpu_t 1015,25688
					 decltype(1016,25751
	std::uint64_t win_len 1018,25810
	std::uint64_t slide_len 1019,25838
	std::uint64_t triggering_delay 1020,25868
	win_type_t winType 1021,25905
	std::size_t batch_len 1022,25931
	std::size_t n_thread_block 1023,25959
	std::string name 1024,26020
	std::size_t scratchpad_size 1025,26061
	WinSeqGPU_Builder(1033,26181
	WinSeqGPU_Builder<F_t>& withCBWindows(1042,26454
	WinSeqGPU_Builder<F_t>& withTBWindows(1059,26912
	WinSeqGPU_Builder<F_t>& withBatch(1077,27521
	WinSeqGPU_Builder<F_t>& withName(1091,27899
	WinSeqGPU_Builder<F_t>& withScratchpad(1103,28209
	winseq_gpu_t *build_ptr(build_ptr1114,28508
	std::unique_ptr<winseq_gpu_t> build_unique(1126,28812
class WinFarm_Builder1143,29225
	T &input;input1146,29258
	using winfarm_t 1148,29324
	using closing_func_t 1150,29439
	std::uint64_t win_len 1151,29501
	std::uint64_t slide_len 1152,29529
	std::uint64_t triggering_delay 1153,29559
	win_type_t winType 1154,29596
	std::size_t pardegree 1155,29622
	std::string name 1156,29650
	opt_level_t opt_level 1157,29686
	closing_func_t closing_func 1158,29719
	void initWindowConf(1162,29882
	void initWindowConf(1172,30149
	void initWindowConf(1182,30410
	WinFarm_Builder(1196,30671
	WinFarm_Builder<T>& withCBWindows(1208,30972
	WinFarm_Builder<T>& withTBWindows(1224,31415
	WinFarm_Builder<T>& withParallelism(1241,31926
	WinFarm_Builder<T>& withName(1253,32201
	WinFarm_Builder<T>& withOptLevel(1265,32462
	WinFarm_Builder<T>& withClosingFunction(1279,32903
	winfarm_t build(1291,33187
	winfarm_t *build_ptr(build_ptr1304,33539
	std::unique_ptr<winfarm_t> build_unique(1316,33838
class WinFarmGPU_Builder1334,34255
	T &input;input1337,34291
	using winfarm_gpu_t 1339,34357
	std::uint64_t win_len 1340,34447
	std::uint64_t slide_len 1341,34475
	std::uint64_t triggering_delay 1342,34505
	win_type_t winType 1343,34542
	std::size_t pardegree 1344,34568
	std::size_t batch_len 1345,34596
	std::size_t n_thread_block 1346,34624
	std::string name 1347,34685
	std::size_t scratchpad_size 1348,34725
	opt_level_t opt_level 1349,34759
	void initWindowConf(1353,34885
	void initWindowConf(1365,35228
	void initWindowConf(1377,35561
	WinFarmGPU_Builder(1393,35909
	WinFarmGPU_Builder<T>& withCBWindows(1404,36212
	WinFarmGPU_Builder<T>& withTBWindows(1421,36668
	WinFarmGPU_Builder<T>& withParallelism(1438,37192
	WinFarmGPU_Builder<T>& withBatch(1451,37549
	WinFarmGPU_Builder<T>& withName(1465,37926
	WinFarmGPU_Builder<T>& withScratchpad(1477,38235
	WinFarmGPU_Builder<T>& withOptLevel(1489,38542
	winfarm_gpu_t *build_ptr(build_ptr1500,38822
	std::unique_ptr<winfarm_gpu_t> build_unique(1513,39167
class KeyFarm_Builder1534,39666
	T &input;input1537,39699
	using keyfarm_t 1539,39765
	using closing_func_t 1541,39880
	using routing_func_t 1543,40044
	std::uint64_t win_len 1544,40122
	std::uint64_t slide_len 1545,40150
	std::uint64_t triggering_delay 1546,40180
	win_type_t winType 1547,40217
	std::size_t pardegree 1548,40243
	std::string name 1549,40271
	routing_func_t routing_func 1550,40307
	opt_level_t opt_level 1551,40388
	closing_func_t closing_func 1552,40421
	void initWindowConf(1556,40584
	void initWindowConf(1566,40851
	void initWindowConf(1576,41112
	KeyFarm_Builder(1590,41373
	KeyFarm_Builder<T>& withCBWindows(1602,41674
	KeyFarm_Builder<T>& withTBWindows(1619,42124
	KeyFarm_Builder<T>& withParallelism(1636,42635
	KeyFarm_Builder<T>& withName(1648,42910
	KeyFarm_Builder<T>& withOptLevel(1660,43171
	KeyFarm_Builder<T>& withClosingFunction(1672,43465
	keyfarm_t build(1684,43749
	keyfarm_t *build_ptr(build_ptr1697,44109
	std::unique_ptr<keyfarm_t> build_unique(1709,44416
class KeyFarmGPU_Builder1727,44841
	T &input;input1730,44877
	using routing_func_t 1732,44990
	using keyfarm_gpu_t 1734,45123
	std::uint64_t win_len 1735,45213
	std::uint64_t slide_len 1736,45241
	std::uint64_t triggering_delay 1737,45271
	win_type_t winType 1738,45308
	std::size_t pardegree 1739,45334
	std::size_t batch_len 1740,45362
	std::size_t n_thread_block 1741,45390
	std::string name 1742,45451
	std::size_t scratchpad_size 1743,45491
	routing_func_t routing_func 1744,45525
	opt_level_t opt_level 1745,45606
	void initWindowConf(1749,45732
	void initWindowConf(1761,46075
	void initWindowConf(1773,46408
	KeyFarmGPU_Builder(1789,46756
	KeyFarmGPU_Builder<T>& withCBWindows(1800,47059
	KeyFarmGPU_Builder<T>& withTBWindows(1817,47515
	KeyFarmGPU_Builder<T>& withParallelism(1834,48039
	KeyFarmGPU_Builder<T>& withBatch(1847,48396
	KeyFarmGPU_Builder<T>& withName(1861,48773
	KeyFarmGPU_Builder<T>& withScratchpad(1873,49082
	KeyFarmGPU_Builder<T>& withOptLevel(1885,49389
	keyfarm_gpu_t *build_ptr(build_ptr1896,49669
	std::unique_ptr<keyfarm_gpu_t> build_unique(1910,50028
template<typename F_t,1930,50517
class PaneFarm_Builder1931,50554
	F_t func_F;1934,50588
	G_t func_G;1935,50601
	using panefarm_t 1936,50614
	using closing_func_t 1939,50750
	std::uint64_t win_len 1940,50812
	std::uint64_t slide_len 1941,50840
	std::uint64_t triggering_delay 1942,50870
	win_type_t winType 1943,50907
	std::size_t plq_degree 1944,50933
	std::size_t wlq_degree 1945,50962
	std::string name 1946,50991
	opt_level_t opt_level 1947,51027
	closing_func_t closing_func 1948,51060
	PaneFarm_Builder(1957,51331
	PaneFarm_Builder<PaneFarm_Builder1966,51639
	PaneFarm_Builder<F_t, G_t>& withCBWindows(1966,51639
	PaneFarm_Builder<PaneFarm_Builder1983,52098
	PaneFarm_Builder<F_t, G_t>& withTBWindows(1983,52098
	PaneFarm_Builder<PaneFarm_Builder2001,52710
	PaneFarm_Builder<F_t, G_t>& withParallelism(2001,52710
	PaneFarm_Builder<PaneFarm_Builder2015,53060
	PaneFarm_Builder<F_t, G_t>& withName(2015,53060
	PaneFarm_Builder<PaneFarm_Builder2027,53330
	PaneFarm_Builder<F_t, G_t>& withOptLevel(2027,53330
	PaneFarm_Builder<PaneFarm_Builder2038,53571
	PaneFarm_Builder<F_t, G_t>& prepare4Nesting(2038,53571
	PaneFarm_Builder<PaneFarm_Builder2050,53850
	PaneFarm_Builder<F_t, G_t>& withClosingFunction(2050,53850
	panefarm_t build(2062,54144
	panefarm_t *build_ptr(build_ptr2076,54530
	std::unique_ptr<panefarm_t> build_unique(2089,54867
template<typename F_t,2107,55304
class PaneFarmGPU_Builder2108,55341
	F_t func_F;2111,55378
	G_t func_G;2112,55391
	using panefarm_gpu_t 2113,55404
					     decltype(2114,55473
	std::uint64_t win_len 2117,55591
	std::uint64_t slide_len 2118,55619
	std::uint64_t triggering_delay 2119,55649
	win_type_t winType 2120,55686
	std::size_t plq_degree 2121,55712
	std::size_t wlq_degree 2122,55741
	std::size_t batch_len 2123,55770
	std::size_t n_thread_block 2124,55798
	std::string name 2125,55859
	std::size_t scratchpad_size 2126,55899
	opt_level_t opt_level 2127,55933
	PaneFarmGPU_Builder(2138,56245
	PaneFarmGPU_Builder<PaneFarmGPU_Builder2148,56569
	PaneFarmGPU_Builder<F_t, G_t>& withCBWindows(2148,56569
	PaneFarmGPU_Builder<PaneFarmGPU_Builder2165,57034
	PaneFarmGPU_Builder<F_t, G_t>& withTBWindows(2165,57034
	PaneFarmGPU_Builder<PaneFarmGPU_Builder2183,57665
	PaneFarmGPU_Builder<F_t, G_t>& withParallelism(2183,57665
	PaneFarmGPU_Builder<PaneFarmGPU_Builder2198,58099
	PaneFarmGPU_Builder<F_t, G_t>& withBatch(2198,58099
	PaneFarmGPU_Builder<PaneFarmGPU_Builder2212,58486
	PaneFarmGPU_Builder<F_t, G_t>& withName(2212,58486
	PaneFarmGPU_Builder<PaneFarmGPU_Builder2224,58803
	PaneFarmGPU_Builder<F_t, G_t>& withScratchpad(2224,58803
	PaneFarmGPU_Builder<PaneFarmGPU_Builder2236,59119
	PaneFarmGPU_Builder<F_t, G_t>& withOptLevel(2236,59119
	PaneFarmGPU_Builder<PaneFarmGPU_Builder2247,59371
	PaneFarmGPU_Builder<F_t, G_t>& prepare4Nesting(2247,59371
	panefarm_gpu_t *build_ptr(build_ptr2258,59638
	std::unique_ptr<panefarm_gpu_t> build_unique(2272,60019
template<typename F_t,2292,60494
class WinMapReduce_Builder2293,60531
	F_t func_F;2296,60569
	G_t func_G;2297,60582
	using winmapreduce_t 2299,60650
	using closing_func_t 2302,60795
	std::uint64_t win_len 2303,60857
	std::uint64_t slide_len 2304,60885
	std::uint64_t triggering_delay 2305,60915
	win_type_t winType 2306,60952
	std::size_t map_degree 2307,60978
	std::size_t reduce_degree 2308,61007
	std::string name 2309,61039
	opt_level_t opt_level 2310,61076
	closing_func_t closing_func 2311,61109
	WinMapReduce_Builder(2320,61383
	WinMapReduce_Builder<WinMapReduce_Builder2330,61702
	WinMapReduce_Builder<F_t, G_t>& withCBWindows(2330,61702
	WinMapReduce_Builder<WinMapReduce_Builder2347,62169
	WinMapReduce_Builder<F_t, G_t>& withTBWindows(2347,62169
	WinMapReduce_Builder<WinMapReduce_Builder2365,62809
	WinMapReduce_Builder<F_t, G_t>& withParallelism(2365,62809
	WinMapReduce_Builder<WinMapReduce_Builder2379,63173
	WinMapReduce_Builder<F_t, G_t>& withName(2379,63173
	WinMapReduce_Builder<WinMapReduce_Builder2391,63451
	WinMapReduce_Builder<F_t, G_t>& withOptLevel(2391,63451
	WinMapReduce_Builder<WinMapReduce_Builder2402,63696
	WinMapReduce_Builder<F_t, G_t>& prepare4Nesting(2402,63696
	WinMapReduce_Builder<WinMapReduce_Builder2414,63979
	WinMapReduce_Builder<F_t, G_t>& withClosingFunction(2414,63979
	winmapreduce_t build(2426,64285
	winmapreduce_t *build_ptr(build_ptr2440,64702
	std::unique_ptr<winmapreduce_t> build_unique(2453,65049
template<typename F_t,2472,65501
class WinMapReduceGPU_Builder2473,65538
	F_t func_F;2476,65579
	G_t func_G;2477,65592
	using winmapreduce_gpu_t 2478,65605
						     decltype(2479,65682
	std::uint64_t win_len 2482,65803
	std::uint64_t slide_len 2483,65831
	std::uint64_t triggering_delay 2484,65861
	win_type_t winType 2485,65898
	std::size_t map_degree 2486,65924
	std::size_t reduce_degree 2487,65953
	std::size_t batch_len 2488,65985
	std::size_t n_thread_block 2489,66013
	std::string name 2490,66074
	std::size_t scratchpad_size 2491,66115
	opt_level_t opt_level 2492,66149
	WinMapReduceGPU_Builder(2503,66464
	WinMapReduceGPU_Builder<WinMapReduceGPU_Builder2513,66789
	WinMapReduceGPU_Builder<F_t, G_t>& withCBWindows(2513,66789
	WinMapReduceGPU_Builder<WinMapReduceGPU_Builder2530,67255
	WinMapReduceGPU_Builder<F_t, G_t>& withTBWindows(2530,67255
	WinMapReduceGPU_Builder<WinMapReduceGPU_Builder2548,67894
	WinMapReduceGPU_Builder<F_t, G_t>& withParallelism(2548,67894
	WinMapReduceGPU_Builder<WinMapReduceGPU_Builder2563,68338
	WinMapReduceGPU_Builder<F_t, G_t>& withBatch(2563,68338
	WinMapReduceGPU_Builder<WinMapReduceGPU_Builder2577,68737
	WinMapReduceGPU_Builder<F_t, G_t>& withName(2577,68737
	WinMapReduceGPU_Builder<WinMapReduceGPU_Builder2589,69058
	WinMapReduceGPU_Builder<F_t, G_t>& withScratchpad(2589,69058
	WinMapReduceGPU_Builder<WinMapReduceGPU_Builder2601,69382
	WinMapReduceGPU_Builder<F_t, G_t>& withOptLevel(2601,69382
	WinMapReduceGPU_Builder<WinMapReduceGPU_Builder2612,69638
	WinMapReduceGPU_Builder<F_t, G_t>& prepare4Nesting(2612,69638
	winmapreduce_gpu_t *build_ptr(build_ptr2623,69909
	std::unique_ptr<winmapreduce_gpu_t> build_unique(2638,70328
class Sink_Builder2661,70861
	F_t func;2664,70891
	using sink_t 2666,70957
	using closing_func_t 2668,71041
	using routing_func_t 2670,71205
	std::uint64_t pardegree 2671,71283
	std::string name 2672,71313
	bool isKeyed 2673,71351
	closing_func_t closing_func 2674,71374
	routing_func_t routing_func 2675,71448
	Sink_Builder(2683,71633
	Sink_Builder<F_t>& withName(2691,71836
	Sink_Builder<F_t>& withParallelism(2703,72082
	Sink_Builder<F_t>& enable_KeyBy(2714,72287
	Sink_Builder<F_t>& withClosingFunction(2726,72550
	sink_t build(2738,72825
	sink_t *build_ptr(build_ptr2753,73216
	std::unique_ptr<sink_t> build_unique(2767,73522

wf/context.hpp,330
#define CONTEXT_H34,1433
namespace wf39,1495
class RuntimeContext51,1953
	size_t parallelism;54,1985
	size_t index;55,2044
	LocalStorage storage;56,2083
	RuntimeContext(60,2151
	RuntimeContext(69,2375
	size_t getParallelism(78,2646
	size_t getReplicaIndex(88,2856
	LocalStorage &getLocalStorage(getLocalStorage98,3054

wf/filter.hpp,828
#define FILTER_H35,1446
namespace wf47,1663
class Filter:Filter58,1995
	bool used;73,2596
	bool keyed;74,2670
	class Filter_Node:Filter_Node76,2772
		filter_func_t filter_func;79,2835
		rich_filter_func_t rich_filter_func;80,2895
		closing_func_t closing_func;81,2970
		std::string name;82,3021
		bool isRich;83,3086
		RuntimeContext context;84,3202
		volatile unsigned long startTD,89,3353
		volatile unsigned long startTD, startTS,89,3353
		volatile unsigned long startTD, startTS, endTD,89,3353
		volatile unsigned long startTD, startTS, endTD, endTS;89,3353
		Filter_Node(95,3482
		Filter_Node(107,3763
		int svc_init(118,4096
		tuple_t *svc(svc144,4942
		void svc_end(176,5822
	Filter(203,6713
	Filter(239,7998
	Filter(275,9229
	Filter(311,10524
	bool isKeyed(343,11645
	bool isUsed(352,11846

wf/filter_gpu.hpp,1264
#define FILTER_GPU_H35,1440
namespace wf 49,1697
template<typename tuple_t,54,1844
__global__ void filter_kernel(55,1895
class FilterGPU:FilterGPU74,2590
	using filter_func_t 78,2672
	using closing_func_t 80,2761
	using routing_func_t 82,2927
	bool used;87,3075
	bool keyed;88,3149
	class FilterGPU_Node:FilterGPU_Node90,3257
		std::array<std::array93,3364
		std::array<tuple_t *, max_buffered_tuples> cpu_tuple_buffer;93,3364
		tuple_t *gpu_tuple_buffer;gpu_tuple_buffer94,3427
		bool *tuple_mask_array;tuple_mask_array95,3456
		filter_func_t filter_func;97,3483
		closing_func_t closing_func;98,3543
		std::string name;99,3594
		RuntimeContext context;100,3659
		std::size_t buf_index 101,3685
		unsigned long rcvTuples 104,3743
		double avg_td_us 105,3774
		double avg_ts_us 106,3798
		volatile unsigned long startTD,107,3822
		volatile unsigned long startTD, startTS,107,3822
		volatile unsigned long startTD, startTS, endTD,107,3822
		volatile unsigned long startTD, startTS, endTD, endTS;107,3822
		fill_tuple_buffers(111,3936
		send_filtered_tuples(119,4081
		FilterGPU_Node(132,4347
		svc_init(144,4664
		svc(180,5714
		svc_end(212,6684
	FilterGPU(240,7633
	FilterGPU(281,9003
	isKeyed(316,10165
	isUsed(326,10367

wf/flatmap.hpp,880
#define FLATMAP_H36,1598
namespace wf48,1819
template<typename tuple_t,58,2082
class FlatMap:FlatMap59,2128
	bool keyed;78,2821
	bool used;79,2902
	class FlatMap_Node:FlatMap_Node81,2999
		flatmap_func_t flatmap_func;84,3073
		rich_flatmap_func_t rich_flatmap_func;85,3124
		closing_func_t closing_func;86,3190
		std::string name;87,3241
		bool isRich;88,3306
		RuntimeContext context;91,3515
		volatile unsigned long startTD,98,3730
		volatile unsigned long startTD, startTS,98,3730
		volatile unsigned long startTD, startTS, endTD,98,3730
		volatile unsigned long startTD, startTS, endTD, endTS;98,3730
		FlatMap_Node(104,3859
		FlatMap_Node(116,4148
		int svc_init(128,4492
		result_t *svc(svc158,5401
		void svc_end(187,6287
	FlatMap(216,7259
	FlatMap(259,8558
	FlatMap(301,9799
	FlatMap(342,11095
	bool isKeyed(380,12245
	bool isUsed(389,12448

wf/iterable.hpp,502
#define ITERABLE_H36,1582
namespace wf42,1654
class Iterable53,1999
	iterator_t first;59,2176
	iterator_t last;60,2226
	size_t n_size;61,2285
	Iterable(70,2483
	iterator_t begin(82,2744
	const_iterator_t begin(92,2937
	iterator_t end(102,3127
	const_iterator_t end(112,3313
	size_t size(122,3483
	tuple_t &at(at162,4684
	const tuple_t &at(at176,5112
	tuple_t &front(front189,5494
	const tuple_t &front(front202,5869
	tuple_t &back(back215,6242
	const tuple_t &back(back228,6615

wf/key_farm.hpp,1003
#define KEY_FARM_H39,1758
namespace wf 55,2099
template<typename tuple_t,66,2456
class Key_Farm:Key_Farm67,2502
    bool hasComplexWorkers;101,4384
    opt_level_t outer_opt_level;103,4454
    opt_level_t inner_opt_level;105,4536
    pattern_t inner_type;107,4604
    size_t parallelism;109,4665
    size_t inner_parallelism_1;111,4739
    size_t inner_parallelism_2;112,4771
    win_type_t winType;114,4833
    bool used;115,4857
    Key_Farm(119,4991
    void optimize_KeyFarm(172,7323
    Key_Farm(220,9560
    Key_Farm(249,11012
    Key_Farm(278,12472
    Key_Farm(307,13944
    Key_Farm(336,15446
    Key_Farm(444,24702
    bool useComplexNesting(542,33554
    opt_level_t getOptLevel(551,33781
    pattern_t getInnerType(560,33989
    opt_level_t getInnerOptLevel(569,34233
    size_t getParallelism(578,34446
    std::pair<std::pair587,34693
    std::pair<size_t, size_t> getInnerParallelism(587,34693
    win_type_t getWinType(596,34993
    bool isUsed(605,35237

wf/key_farm_gpu.hpp,1124
#define KEY_FARM_GPU_H41,1951
namespace wf 57,2300
template<typename tuple_t,69,2833
template<typename tuple_t, typename result_t,69,2833
class Key_Farm_GPU:Key_Farm_GPU70,2897
	using pane_farm_gpu_t = Pane_Farm_GPU<tuple_t, result_t,77,3182
	using win_mapreduce_gpu_t = Win_MapReduce_GPU<tuple_t, result_t,79,3326
	using win_seq_gpu_t = Win_Seq_GPU<tuple_t, result_t,86,3585
	 bool hasComplexWorkers;97,4069
	opt_level_t outer_opt_level;99,4138
	opt_level_t inner_opt_level;101,4214
	pattern_t inner_type;103,4276
	size_t parallelism;105,4335
	size_t inner_parallelism_1;107,4403
	size_t inner_parallelism_2;108,4432
	win_type_t winType;110,4488
	bool used;111,4509
	void optimize_KeyFarmGPU(114,4650
	Key_Farm_GPU(168,6806
	Key_Farm_GPU(254,10074
	Key_Farm_GPU(399,15740
	bool useComplexNesting(498,20210
	opt_level_t getOptLevel(507,20408
	pattern_t getInnerType(516,20591
	opt_level_t getInnerOptLevel(525,20810
	size_t getParallelism(534,21002
	std::pair<std::pair543,21216
	std::pair<size_t, size_t> getInnerParallelism(543,21216
	win_type_t getWinType(552,21487
	bool isUsed(561,21711

wf/kf_nodes.hpp,1075
#define KF_NODES_H31,1248
namespace wf 38,1356
class KF_Emitter:KF_Emitter42,1419
    routing_func_t routing_func;47,1640
    size_t pardegree;48,1693
    bool isCombined;49,1765
    std::vector<std::vector50,1842
    std::vector<std::pair<void *, int>> output_queue;50,1842
    KF_Emitter(54,1961
    Basic_Emitter *clone(clone62,2184
    int svc_init(69,2377
    void *svc(svc75,2480
    void svc_end(91,3090
    size_t getNDestinations(94,3151
    void setTree_EmitterMode(100,3265
    std::vector<std::vector106,3435
    std::vector<std::pair<void *, int>> &getOutputQueue(getOutputQueue106,3435
class KF_Collector:KF_Collector114,3588
    result_t tmp;117,3662
    using key_t 119,3715
    struct Key_Descriptor121,3858
        uint64_t next_win;123,3890
        std::deque<result_t *> resultsSet;124,3962
        Key_Descriptor(127,4075
    std::unordered_map<std::unordered_map131,4189
    std::unordered_map<key_t, Key_Descriptor> keyMap;131,4189
    int svc_init(135,4310
    result_t *svc(svc141,4413
    void svc_end(177,5831

wf/local_storage.hpp,348
#define LOCALSTORAGE_H32,1353
namespace wf 38,1434
class LocalStorage50,1896
    size_t n_fields;53,1926
    std::unordered_map<std::unordered_map54,1990
    std::unordered_map<std::string, void *> storage;54,1990
    LocalStorage(58,2108
    type_t get(70,2649
    void put(94,3513
    void remove(118,4358
    size_t getSize(132,4719

wf/map.hpp,1485
#define MAP_H36,1555
namespace wf47,1749
template<typename tuple_t,57,2010
class Map:Map58,2056
	bool keyed;77,2962
	bool used;78,3039
	class Map_Node:Map_Node80,3132
		map_func_ip_t func_ip;83,3202
		rich_map_func_ip_t rich_func_ip;84,3252
		map_func_nip_t func_nip;85,3317
		rich_map_func_nip_t rich_func_nip;86,3373
		closing_func_t closing_func;87,3444
		std::string name;88,3495
		bool isIP;89,3560
		bool isRich;90,3670
		RuntimeContext context;91,3786
		volatile unsigned long startTD,96,3937
		volatile unsigned long startTD, startTS,96,3937
		volatile unsigned long startTD, startTS, endTD,96,3937
		volatile unsigned long startTD, startTS, endTD, endTS;96,3937
			name(108,4328
			isIP(109,4344
			isRich(110,4359
			context(111,4377
			closing_func(112,4399
			name(122,4728
			isIP(123,4744
			isRich(124,4759
			context(125,4776
			closing_func(126,4798
			name(136,5121
			isIP(137,5137
			isRich(138,5153
			context(139,5171
			closing_func(140,5193
			name(151,5529
			isIP(152,5545
			isRich(153,5561
			context(154,5578
			closing_func(155,5600
		int svc_init(159,5693
		result_t *svc(svc185,6539
		void svc_end(223,7492
		keyed(false), used(255,8637
		keyed(true), used(293,10077
		keyed(false), used(329,11395
		keyed(true), used(367,12845
		keyed(false), used(403,14157
		keyed(true), used(441,15603
		keyed(false), used(477,16927
		keyed(true), used(515,18385
	bool isKeyed(542,19323
	bool isUsed(551,19518

wf/map_gpu.hpp,2164
#define MAP_GPU_H36,1552
namespace wf53,1918
template <typename F,59,2090
struct is_invocable 60,2130
template<typename tuple_t,67,2418
run_map_kernel_ip(69,2478
template<typename tuple_t,78,2777
template<typename tuple_t, typename result_t,78,2777
run_map_kernel_nip(80,2856
failwith(96,3470
template<typename int_t=106,3725
template<typename tuple_t,130,4517
template<typename tuple_t, typename result_t,130,4517
class MapGPU:MapGPU131,4580
	using closing_func_t 135,4657
	using routing_func_t 138,4828
	static constexpr auto DEFAULT_MAX_BUFFERED_TUPLES 141,4923
	static constexpr auto DEFAULT_GPU_BLOCKS 142,4981
	static constexpr auto DEFAULT_GPU_THREADS_PER_BLOCK 143,5028
	bool is_keyed;146,5163
	bool used;147,5229
	class MapGPU_Node:MapGPU_Node149,5287
		func_t map_func;151,5350
		closing_func_t closing_func;153,5433
		std::string name;154,5484
		RuntimeContext context;155,5549
		std::size_t max_buffered_tuples;156,5593
		std::size_t gpu_blocks;157,5628
		std::size_t gpu_threads_per_block;158,5654
		tuple_t *tuple_buffer;tuple_buffer161,5716
		result_t *result_buffer;result_buffer162,5741
		std::size_t buf_index 163,5768
		std::vector<tuple_t> cpu_tuple_buffer;165,5803
		tuple_t *gpu_tuple_buffer;gpu_tuple_buffer166,5844
		std::vector<result_t> cpu_result_buffer;167,5873
		result_t *gpu_result_buffer;gpu_result_buffer168,5916
		cudaStream_t cuda_stream;170,5954
		unsigned long rcvTuples 173,6011
		double avg_td_us 174,6042
		double avg_ts_us 175,6066
		volatile unsigned long startTD,176,6090
		volatile unsigned long startTD, startTS,176,6090
		volatile unsigned long startTD, startTS, endTD,176,6090
		volatile unsigned long startTD, startTS, endTD, endTS;176,6090
			: map_func {func}, name 301,10207
			: map_func {func}, name {name}, context 301,10207
			  max_buffered_tuples 302,10261
			  gpu_blocks 303,10309
			  gpu_threads_per_block 304,10339
		svc_init(315,10628
		svc(344,11556
		svc_end(381,12548
public:public407,13378
	template <typename string_t=462,15591
	template <typename string_t=std::string, typename int_t=462,15591
	isKeyed(498,16913
	isUsed(508,17112

wf/meta_utils.hpp,8389
#define META_H30,1123
    namespace std 36,1245
namespace wf 45,1479
template<typename F_t,48,1562
template<typename F_t, typename Arg1,48,1562
template<typename F_t,51,1695
template<typename F_t, typename Arg1,51,1695
template<typename Arg1,54,1822
template<typename F_t,61,2118
template<typename F_t, typename Arg1,61,2118
template<typename F_t,64,2266
template<typename F_t, typename Arg1,64,2266
template<typename Arg1,67,2408
template<typename F_t,70,2531
template<typename F_t, typename Arg1,70,2531
template<typename F_t,73,2696
template<typename F_t, typename Arg1,73,2696
template<typename Arg1,76,2855
template<typename F_t,79,2995
template<typename F_t,82,3097
template<typename F_t,88,3270
template<typename F_t,91,3389
template<typename F_t,97,3596
template<typename F_t,100,3710
template<typename F_t,106,3907
template<typename F_t,109,4038
template<typename F_t,115,4269
template<typename F_t, typename Arg1,115,4269
template<typename F_t,118,4403
template<typename F_t, typename Arg1,118,4403
template<typename Arg1,121,4531
template<typename F_t,124,4640
template<typename F_t, typename Arg1,124,4640
template<typename F_t,127,4791
template<typename F_t, typename Arg1,127,4791
template<typename Arg1,130,4936
template<typename F_t,133,5062
template<typename F_t,136,5175
template<typename F_t,142,5370
template<typename F_t,145,5500
template<typename F_t,151,5729
template<typename F_t,154,5835
template<typename F_t,160,6016
template<typename F_t,163,6139
template<typename F_t,169,6354
template<typename F_t, typename Ret,169,6354
template<typename F_t, typename Ret, typename Arg1,169,6354
template<typename F_t,172,6544
template<typename F_t, typename Ret,172,6544
template<typename F_t, typename Ret, typename Arg1,172,6544
template<typename F_t,175,6751
template<typename F_t, typename Ret,175,6751
template<typename F_t, typename Ret, typename Arg1,175,6751
template<typename F_t,178,6935
template<typename F_t, typename Ret,178,6935
template<typename F_t, typename Ret, typename Arg1,178,6935
template<typename Ret,181,7136
template<typename Ret, typename Arg1,181,7136
template<typename Ret,184,7301
template<typename Ret, typename Arg1,184,7301
template<typename F_t,187,7483
template<typename F_t, typename Ret,187,7483
template<typename F_t, typename Ret, typename Arg1,187,7483
template<typename F_t,190,7659
template<typename F_t, typename Ret,190,7659
template<typename F_t, typename Ret, typename Arg1,190,7659
template<typename F_t,193,7852
template<typename F_t, typename Ret,193,7852
template<typename F_t, typename Ret, typename Arg1,193,7852
template<typename F_t,196,8022
template<typename F_t, typename Ret,196,8022
template<typename F_t, typename Ret, typename Arg1,196,8022
template<typename Ret,199,8209
template<typename Ret, typename Arg1,199,8209
template<typename Ret,202,8360
template<typename Ret, typename Arg1,202,8360
template<typename F_t,205,8528
template<typename F_t, typename Ret,205,8528
template<typename F_t, typename Ret, typename Arg1,205,8528
template<typename F_t,208,8730
template<typename F_t, typename Ret,208,8730
template<typename F_t, typename Ret, typename Arg1,208,8730
template<typename Ret,211,8926
template<typename Ret, typename Arg1,211,8926
template<typename F_t,218,9280
template<typename F_t, typename Arg1,218,9280
template<typename F_t,221,9429
template<typename F_t, typename Arg1,221,9429
template<typename Arg1,224,9572
template<typename F_t,227,9696
template<typename F_t, typename Arg1,227,9696
template<typename F_t,230,9862
template<typename F_t, typename Arg1,230,9862
template<typename Arg1,233,10022
template<typename F_t,236,10163
template<typename F_t,239,10266
template<typename F_t,245,10441
template<typename F_t,248,10561
template<typename F_t,254,10770
template<typename F_t, typename Arg1,254,10770
template<typename F_t,257,10905
template<typename F_t, typename Arg1,257,10905
template<typename Arg1,260,11034
template<typename F_t,263,11144
template<typename F_t, typename Arg1,263,11144
template<typename F_t,266,11296
template<typename F_t, typename Arg1,266,11296
template<typename Arg1,269,11442
template<typename F_t,272,11569
template<typename F_t, typename Ret,272,11569
template<typename F_t, typename Ret, typename Arg1,272,11569
template<typename F_t,275,11726
template<typename F_t, typename Ret,275,11726
template<typename F_t, typename Ret, typename Arg1,275,11726
template<typename F_t,278,11900
template<typename F_t, typename Ret,278,11900
template<typename F_t, typename Ret, typename Arg1,278,11900
template<typename F_t,281,12051
template<typename F_t, typename Ret,281,12051
template<typename F_t, typename Ret, typename Arg1,281,12051
template<typename Ret,284,12219
template<typename Ret, typename Arg1,284,12219
template<typename Ret,287,12351
template<typename Ret, typename Arg1,287,12351
template<typename F_t,290,12500
template<typename F_t, typename Ret,290,12500
template<typename F_t, typename Ret, typename Arg1,290,12500
template<typename F_t,293,12687
template<typename F_t, typename Ret,293,12687
template<typename F_t, typename Ret, typename Arg1,293,12687
template<typename Ret,296,12868
template<typename Ret, typename Arg1,296,12868
auto *get_WF_nested_type(get_WF_nested_type312,13616
auto *get_WF_GPU_nested_type(get_WF_GPU_nested_type329,14320
template<typename arg1,338,14618
template<typename arg1, typename arg2,338,14618
template<typename arg1,342,14845
template<typename arg1, typename arg2,342,14845
auto *get_KF_nested_type(get_KF_nested_type347,15108
template<typename arg1,355,15364
template<typename arg1, typename arg2,355,15364
template<typename arg1, typename arg2, typename arg3,355,15364
template<typename arg1,359,15638
template<typename arg1, typename arg2,359,15638
template<typename arg1, typename arg2, typename arg3,359,15638
auto *get_KF_GPU_nested_type(get_KF_GPU_nested_type364,15944
template<typename F_t,373,16249
template<typename F_t, typename G_t,373,16249
template<typename F_t, typename G_t, typename Ret,373,16249
template<typename F_t, typename G_t, typename Ret, typename Arg1,373,16249
template<typename F_t,376,16471
template<typename F_t, typename Ret,376,16471
template<typename F_t, typename Ret, typename Arg1,376,16471
template<typename F_t,379,16668
template<typename F_t, typename G_t,379,16668
template<typename F_t, typename G_t, typename Ret,379,16668
template<typename F_t, typename G_t, typename Ret, typename Arg1,379,16668
template<typename F_t,382,16880
template<typename F_t, typename Ret,382,16880
template<typename F_t, typename Ret, typename Arg1,382,16880
template<typename F_t,385,17067
template<typename F_t, typename G_t,385,17067
template<typename F_t, typename G_t, typename Ret,385,17067
template<typename F_t, typename G_t, typename Ret, typename Arg1,385,17067
template<typename G_t,388,17288
template<typename G_t, typename Ret,388,17288
template<typename G_t, typename Ret, typename Arg1,388,17288
template<typename F_t,391,17484
template<typename F_t, typename G_t,391,17484
template<typename F_t, typename G_t, typename Ret,391,17484
template<typename F_t, typename G_t, typename Ret, typename Arg1,391,17484
template<typename G_t,394,17695
template<typename G_t, typename Ret,394,17695
template<typename G_t, typename Ret, typename Arg1,394,17695
struct wrapper_tuple_t399,17942
    tuple_t *tuple;tuple401,17967
    std::atomic<size_t> counter;402,18009
    bool eos;403,18070
    wrapper_tuple_t(406,18142
template <typename T1,416,18418
T1 *extractTuple(extractTuple417,18454
template <typename T1,423,18679
T1 *extractTuple(extractTuple424,18715
template <typename T1,430,18920
void deleteTuple(431,18956
template <typename T1,443,19369
void deleteTuple(444,19405
template<typename T1,450,19612
template<typename T1, typename T2,450,19612
T1 *createWrapper(createWrapper451,19660
template<typename T1,458,19950
template<typename T1, typename T2,458,19950
T2 *createWrapper(createWrapper459,19998
template<typename T1,467,20344
T2 *prepareWrapper(prepareWrapper468,20379
template<typename T1,475,20646
T2 *prepareWrapper(prepareWrapper476,20681
template<typename T1,483,20940
bool isEOSMarker(484,20975
template<typename T1,490,21202
bool isEOSMarker(491,21237

wf/ordering_node.hpp,616
#define ORDERINGNODE_H33,1382
namespace wf 43,1553
template<typename tuple_t,46,1592
template<typename tuple_t, typename input_t=46,1592
    struct Comparator 54,1950
        ordering_mode_t mode;56,1999
        Comparator(59,2053
        bool operator() operator()62,2134
    struct Key_Descriptor78,2877
        uint64_t emit_counter;80,2909
    	std::vector<uint64_t> maxs;81,2996
        input_t *eos_marker;eos_marker82,3119
    	std::priority_queue<std::priority_queue84,3271
    	std::priority_queue<input_t *, std::deque<input_t *>, Comparator> queue;84,3271
        Key_Descriptor(87,3373

wf/pane_farm.hpp,1869
#define PANE_FARM_H41,1914
namespace wf 50,2070
template<typename tuple_t,62,2507
template<typename tuple_t, typename result_t,62,2507
class Pane_Farm:Pane_Farm63,2571
private:private85,4051
    template<typename T1,89,4192
    plq_func_t plq_func;106,4713
    rich_plq_func_t rich_plq_func;107,4738
    plqupdate_funct_t plqupdate_func;108,4773
    rich_plqupdate_funct_t rich_plqupdate_func;109,4811
    wlq_func_t wlq_func;110,4859
    rich_wlq_func_t rich_wlq_func;111,4884
    wlqupdate_func_t wlqupdate_func;112,4919
    rich_wlqupdate_func_t rich_wlqupdate_func;113,4956
    closing_func_t closing_func;114,5003
    bool isNICPLQ;115,5036
    bool isNICWLQ;116,5055
    bool isRichPLQ;117,5074
    bool isRichWLQ;118,5094
    uint64_t win_len;119,5114
    uint64_t slide_len;120,5136
    uint64_t triggering_delay;121,5160
    win_type_t winType;122,5191
    size_t plq_degree;123,5215
    size_t wlq_degree;124,5238
    std::string name;125,5261
    bool ordered;126,5283
    opt_level_t opt_level;127,5301
    PatternConfig config;128,5328
    bool used;129,5354
    bool used4Nesting;130,5431
    template<typename F_t,133,5542
    Pane_Farm(134,5583
    const ff::ff_pipeline optimize_PaneFarm(213,9962
    Pane_Farm(275,12940
    Pane_Farm(315,14794
    Pane_Farm(355,16673
    Pane_Farm(395,18561
    Pane_Farm(435,20456
    Pane_Farm(475,22377
    Pane_Farm(515,24323
    Pane_Farm(555,26280
    Pane_Farm(595,28236
    Pane_Farm(635,30122
    Pane_Farm(675,32033
    Pane_Farm(715,33955
    Pane_Farm(755,35882
    Pane_Farm(795,37771
    Pane_Farm(835,39683
    Pane_Farm(875,41606
    opt_level_t getOptLevel(903,42708
    win_type_t getWinType(912,42937
    size_t getPLQParallelism(921,43122
    size_t getWLQParallelism(930,43313
    bool isUsed(939,43563
    bool isUsed4Nesting(948,43791

wf/pane_farm_gpu.hpp,1659
#define PANE_FARM_GPU_H44,2201
namespace wf 54,2389
template<typename tuple_t,69,3012
template<typename tuple_t, typename result_t,69,3012
template<typename tuple_t, typename result_t, typename F_t,69,3012
class Pane_Farm_GPU:Pane_Farm_GPU70,3090
private:private82,3749
    template<typename T1,86,3907
    template<typename T1, typename T2,86,3907
    F_t gpuFunction;103,4455
    plq_func_t plq_func;104,4476
    plqupdate_func_t plqupdate_func;105,4501
    wlq_func_t wlq_func;106,4538
    wlqupdate_func_t wlqupdate_func;107,4563
    bool isGPUPLQ;108,4600
    bool isGPUWLQ;109,4619
    bool isNICPLQ;110,4638
    bool isNICWLQ;111,4657
    uint64_t win_len;112,4676
    uint64_t slide_len;113,4698
    uint64_t triggering_delay;114,4722
    win_type_t winType;115,4753
    size_t plq_degree;116,4777
    size_t wlq_degree;117,4800
    size_t batch_len;118,4823
    size_t n_thread_block;119,4845
    std::string name;120,4872
    size_t scratchpad_size;121,4894
    bool ordered;122,4922
    opt_level_t opt_level;123,4940
    PatternConfig config;124,4967
    bool used;125,4993
    bool used4Nesting;126,5070
    Pane_Farm_GPU(129,5183
    Pane_Farm_GPU(224,10350
    Pane_Farm_GPU(319,15555
    Pane_Farm_GPU(414,20720
    const ff::ff_pipeline optimize_PaneFarmGPU(509,25961
    Pane_Farm_GPU(572,29150
    Pane_Farm_GPU(610,31216
    Pane_Farm_GPU(648,33300
    Pane_Farm_GPU(686,35366
    opt_level_t getOptLevel(710,36397
    win_type_t getWinType(719,36626
    size_t getPLQParallelism(728,36811
    size_t getWLQParallelism(737,37002
    bool isUsed(746,37260
    bool isUsed4Nesting(755,37496

wf/pipegraph.hpp,5707
#define PIPEGRAPH_H36,1566
namespace wf 59,2056
struct AppNode64,2142
	MultiPipe *mp;mp66,2159
    AppNode *parent;parent67,2175
	std::vector<AppNode *> children;68,2196
	AppNode(71,2247
class selfkiller_node:selfkiller_node79,2450
    int svc_init(82,2547
    void *svc(svc89,2678
class PipeGraph105,3000
	std::string name;108,3027
	AppNode *root;root109,3071
	std::vector<MultiPipe *> toBeDeteled;110,3134
    Mode mode;111,3220
	PipeGraph(146,4721
class MultiPipe:MultiPipe191,6054
    enum routing_types_t 195,6145
    enum routing_types_t { STATELESS,195,6145
    enum routing_types_t { STATELESS, KEYED,195,6145
    enum routing_types_t { STATELESS, KEYED, COMPLEX 195,6145
    PipeGraph *graph;graph196,6201
	bool has_source;197,6260
	bool has_sink;198,6324
	ff::ff_a2a *last;last199,6382
    ff::ff_a2a *secondToLast;secondToLast200,6434
    bool isMerged;201,6507
    bool isSplit;202,6598
    bool fromSplitting;203,6687
    size_t splittingBranches;204,6785
    MultiPipe *splittingParent splittingParent205,6879
    Basic_Emitter *splittingEmitterRoot splittingEmitterRoot206,6994
    std::vector<Basic_Emitter *> splittingEmitterLeaves;207,7098
    std::vector<MultiPipe *> splittingChildren;208,7209
    bool forceShuffling;209,7331
    size_t lastParallelism;210,7455
    std::string outputType;211,7561
    MultiPipe(216,7826
    MultiPipe(232,8358
    template<typename emitter_t,263,9584
    template<typename MULTIPIPE,281,10286
    template<typename tuple_t,330,11627
    template<typename tuple_t,338,11908
    template<typename tuple_t,346,12164
    template<typename tuple_t,354,12465
    template<typename tuple_t,362,12737
    template<typename tuple_t,370,12996
    template<typename tuple_t,378,13262
    template<typename tuple_t, typename result_t,378,13262
    template<typename tuple_t,386,13540
    template<typename tuple_t,394,13806
    template<typename tuple_t, typename result_t,394,13806
    template<typename tuple_t,402,14086
    template<typename tuple_t,410,14355
    template<typename tuple_t, typename result_t,410,14355
    template<typename tuple_t,418,14645
    template<typename tuple_t,426,14928
    template<typename tuple_t, typename result_t,426,14928
inline PipeGraph::~PipeGraph(~PipeGraph481,16968
inline AppNode *PipeGraph::find_AppNode(find_AppNode491,17283
inline std::vector<AppNode *> PipeGraph::get_LeavesList(get_LeavesList509,17732
inline AppNode *PipeGraph::get_LCA(get_LCA528,18270
inline void PipeGraph::delete_AppNodes(delete_AppNodes546,18933
inline bool PipeGraph::get_MergedNodes1(get_MergedNodes1560,19299
inline AppNode *PipeGraph::get_MergedNodes2(get_MergedNodes2617,21994
inline std::vector<MultiPipe *> PipeGraph::execute_Split(execute_Split657,23557
inline MultiPipe *PipeGraph::execute_Merge(execute_Merge696,25178
MultiPipe &PipeGraph::add_source(add_source868,33857
inline int PipeGraph::run(run880,34201
inline size_t PipeGraph::getNumThreads(getNumThreads939,36791
MultiPipe &MultiPipe::add_source(add_source951,37166
template<typename emitter_t,992,38749
void MultiPipe::add_operator(add_operator993,38800
bool MultiPipe::chain_operator(chain_operator1100,43795
inline std::vector<ff::ff_node *> MultiPipe::normalize(normalize1146,45881
inline std::vector<MultiPipe *> MultiPipe::prepareMergeSet(prepareMergeSet1208,48427
std::vector<MultiPipe *> MultiPipe::prepareMergeSet(prepareMergeSet1215,48622
template<typename MULTIPIPE,1233,49307
std::vector<MultiPipe *> MultiPipe::prepareMergeSet(prepareMergeSet1234,49360
inline void MultiPipe::prepareSplittingEmitters(prepareSplittingEmitters1254,50161
inline int MultiPipe::run(run1272,50916
inline int MultiPipe::wait(wait1284,51236
inline int MultiPipe::run_and_wait_end(run_and_wait_end1296,51570
MultiPipe &MultiPipe::add(add1309,51971
MultiPipe &MultiPipe::chain(chain1339,53271
template<typename tuple_t,1369,54418
MultiPipe &MultiPipe::add(add1370,54464
template<typename tuple_t,1400,55735
MultiPipe &MultiPipe::chain(chain1401,55781
template<typename tuple_t,1432,56937
MultiPipe &MultiPipe::add(add1433,56983
template<typename tuple_t,1463,58289
MultiPipe &MultiPipe::chain(chain1464,58335
template<typename tuple_t,1494,59496
MultiPipe &MultiPipe::add(add1495,59542
template<typename tuple_t,1525,60793
MultiPipe &MultiPipe::add(add1526,60839
template<typename tuple_t,1649,67451
template<typename tuple_t, typename result_t,1649,67451
MultiPipe &MultiPipe::add(add1650,67511
template<typename tuple_t,1773,74154
MultiPipe &MultiPipe::add(add1774,74200
template<typename tuple_t,1910,81446
template<typename tuple_t, typename result_t,1910,81446
MultiPipe &MultiPipe::add(add1911,81506
template<typename tuple_t,2047,88802
MultiPipe &MultiPipe::add(add2048,88848
template<typename tuple_t,2148,93493
template<typename tuple_t, typename result_t,2148,93493
MultiPipe &MultiPipe::add(add2149,93553
template<typename tuple_t,2249,98223
MultiPipe &MultiPipe::add(add2250,98269
template<typename tuple_t,2337,102405
template<typename tuple_t, typename result_t,2337,102405
MultiPipe &MultiPipe::add(add2338,102465
MultiPipe &MultiPipe::add_sink(add_sink2426,106644
MultiPipe &MultiPipe::chain_sink(chain_sink2457,107943
MultiPipe &MultiPipe::merge(merge2489,109167
MultiPipe &MultiPipe::split(split2522,110549
inline MultiPipe &MultiPipe::select(select2543,111506
inline bool MultiPipe::isRunnable(isRunnable2562,112293
inline bool MultiPipe::hasSource(hasSource2568,112475
inline bool MultiPipe::hasSink(hasSink2574,112613
inline size_t MultiPipe::getNumThreads(getNumThreads2580,112766

wf/shipper.hpp,250
#define SHIPPER_H35,1490
namespace wf 40,1546
class Shipper51,1876
    ff::ff_node *node;node55,1944
    unsigned long n_delivered;57,2007
    Shipper(65,2169
    unsigned long delivered(75,2379
    bool push(86,2641
    bool push(100,3051

wf/sink.hpp,976
#define SINK_H35,1371
    namespace std 41,1493
namespace wf 52,1788
class Sink:Sink62,1997
    bool keyed;77,2642
    bool used;78,2723
    class Sink_Node:Sink_Node80,2823
        sink_func_t sink_fun;83,2895
        rich_sink_func_t rich_sink_func;84,2942
        closing_func_t closing_func;85,3005
        std::string name;86,3062
        bool isRich;87,3133
        RuntimeContext context;88,3255
        volatile unsigned long startTD,93,3430
        volatile unsigned long startTD, startTS,93,3430
        volatile unsigned long startTD, startTS, endTD,93,3430
        volatile unsigned long startTD, startTS, endTD, endTS;93,3430
        Sink_Node(99,3580
        Sink_Node(111,3974
        int svc_init(123,4424
        tuple_t *svc(svc149,5459
        void eosnotify(179,6596
        void svc_end(191,6982
    Sink(218,7995
    Sink(252,9334
    Sink(286,10617
    Sink(320,11966
    bool isKeyed(350,13148
    bool isUsed(359,13373

wf/source.hpp,913
#define SOURCE_H35,1383
namespace wf 47,1606
class Source:Source57,1823
    bool used;74,2705
    class Source_Node:Source_Node76,2807
        source_item_func_t source_func_item;79,2879
        rich_source_item_func_t rich_source_func_item;80,2970
        source_loop_func_t source_func_loop;81,3076
        rich_source_loop_func_t rich_source_func_loop;82,3166
        closing_func_t closing_func;83,3271
        std::string name;84,3328
        bool isItemized;85,3399
        bool isRich;86,3513
        bool isEND;87,3635
        RuntimeContext context;89,3845
        Source_Node(97,4048
        Source_Node(111,4563
        Source_Node(125,5099
        Source_Node(139,5615
        int svc_init(153,6186
        tuple_t *svc(svc180,7272
        void svc_end(214,8478
    Source(240,9389
    Source(272,10630
    Source(304,11871
    Source(337,13257
    bool isUsed(366,14506

wf/splitting_emitter.hpp,748
#define SPLITTING_H30,1182
namespace wf 37,1291
class Splitting_Emitter:Splitting_Emitter41,1361
    unicast_func_t unicast_func;48,1709
    multicast_func_t multicast_func;49,1762
    bool isUnicast;50,1834
    size_t n_dest;51,1917
    bool isCombined;52,1962
    std::vector<std::vector53,2039
    std::vector<std::pair<void *, int>> output_queue;53,2039
    Splitting_Emitter(57,2160
    Splitting_Emitter(66,2449
    Basic_Emitter *clone(clone75,2741
    int svc_init(82,2948
    void *svc(svc88,3051
    void svc_end(121,4215
    size_t getNDestinations(124,4276
    void setTree_EmitterMode(130,4387
    std::vector<std::vector136,4557
    std::vector<std::pair<void *, int>> &getOutputQueue(getOutputQueue136,4557

wf/standard_nodes.hpp,838
#define STANDARD_H30,1191
namespace wf 38,1320
class Standard_Emitter:Standard_Emitter42,1389
    bool isKeyed;47,1616
    routing_func_t routing_func;48,1700
    bool isCombined;49,1753
    std::vector<std::vector50,1830
    std::vector<std::pair<void *, int>> output_queue;50,1830
    size_t dest_w;51,1921
    size_t n_dest;52,1974
    Standard_Emitter(56,2049
    Standard_Emitter(64,2263
    Basic_Emitter *clone(clone74,2575
    int svc_init(81,2780
    void *svc(svc87,2883
    void svc_end(115,3870
    size_t getNDestinations(118,3931
    void setTree_EmitterMode(124,4042
    std::vector<std::vector130,4212
    std::vector<std::pair<void *, int>> &getOutputQueue(getOutputQueue130,4212
class Standard_Collector:Standard_Collector137,4343
    Standard_Collector(141,4419
    void *svc(svc145,4506

wf/stream_archive.hpp,140
#define ARCHIVE_H31,1154
namespace wf 40,1285
template<typename tuple_t,43,1324
template<typename tuple_t, typename container_t=43,1324

wf/transformations.hpp,425
#define TRANSF_H31,1205
namespace wf 36,1257
struct dummy_mi:dummy_mi39,1313
    void *svc(svc41,1346
struct dummy_mo:dummy_mo48,1445
    void *svc(svc50,1478
inline ff::ff_a2a *farm2A2A_collector(farm2A2A_collector57,1602
inline ff::ff_a2a *farm2A2A_emitter(farm2A2A_emitter75,2201
inline void combine_a2a_withFirstNodes(93,2798
inline ff::ff_node *remove_emitter_from_pipe(remove_emitter_from_pipe107,3363

wf/tree_emitter.hpp,913
#define TREEEMITTER_H32,1280
namespace wf 39,1391
class Tree_Emitter:Tree_Emitter42,1429
    Basic_Emitter *root;root45,1481
    std::vector<Basic_Emitter *> children;46,1519
    bool cleanUpRoot;47,1590
    bool cleanUpChildren;48,1660
    bool isCombined;49,1739
    std::vector<std::vector50,1816
    std::vector<std::pair<void *, int>> output_queue;50,1816
    Tree_Emitter(54,1935
    Tree_Emitter(71,2529
    ~Tree_Emitter(85,2979
    Basic_Emitter *clone(clone96,3212
    int svc_init(108,3656
    void *svc(svc114,3759
    void eosnotify(139,4641
    void svc_end(177,6069
    size_t getNDestinations(180,6130
    void setTree_EmitterMode(189,6363
    std::vector<std::vector195,6533
    std::vector<std::pair<void *, int>> &getOutputQueue(getOutputQueue195,6533
    Basic_Emitter *getRootNode(getRootNode201,6671
    std::vector<Basic_Emitter *> getChildrenNodes(207,6781

wf/wf_nodes.hpp,734
#define WF_NODES_H31,1249
namespace wf 40,1400
template<typename tuple_t,43,1436
template<typename tuple_t, typename input_t=43,1436
    struct Key_Descriptor62,2457
        uint64_t rcv_counter;64,2489
        tuple_t last_tuple;65,2560
        Key_Descriptor(68,2692
class WF_Collector:WF_Collector247,9495
    result_t tmp;250,9569
    using key_t 252,9622
    struct Key_Descriptor254,9765
        uint64_t next_win;256,9797
        std::deque<result_t *> resultsSet;257,9869
        Key_Descriptor(260,9982
    std::unordered_map<std::unordered_map263,10095
    std::unordered_map<key_t, Key_Descriptor> keyMap;263,10095
    int svc_init(267,10216
    result_t *svc(svc273,10319
    void svc_end(309,11737

wf/win_farm.hpp,1558
#define WIN_FARM_H37,1604
namespace wf 53,1950
template<typename tuple_t,63,2209
template<typename tuple_t, typename result_t,63,2209
class Win_Farm:Win_Farm64,2273
    using win_seq_t = Win_Seq<tuple_t, result_t,90,3701
    template<typename T1,92,3818
    template<typename T1, typename T2,92,3818
    template<typename T1,94,3898
    template<typename T1, typename T2,94,3898
    template<typename T1,96,3982
    template<typename T1, typename T2,96,3982
    template<typename T1, typename T2, typename T3,96,3982
    template<typename T1,98,4079
    template<typename T1, typename T2,98,4079
    template<typename T1, typename T2, typename T3,98,4079
    bool hasComplexWorkers;104,4385
    opt_level_t outer_opt_level;106,4455
    opt_level_t inner_opt_level;108,4537
    pattern_t inner_type;110,4605
    size_t parallelism;112,4666
    size_t inner_parallelism_1;114,4740
    size_t inner_parallelism_2;115,4772
    win_type_t winType;117,4834
    bool used;118,4858
    Win_Farm(122,4992
    void optimize_WinFarm(181,7714
    Win_Farm(229,9926
    Win_Farm(258,11345
    Win_Farm(287,12772
    Win_Farm(316,14211
    Win_Farm(345,15680
    Win_Farm(458,25466
    bool useComplexNesting(561,34765
    opt_level_t getOptLevel(570,34992
    pattern_t getInnerType(579,35200
    opt_level_t getInnerOptLevel(588,35444
    size_t getParallelism(597,35657
    std::pair<std::pair606,35896
    std::pair<size_t, size_t> getInnerParallelism(606,35896
    win_type_t getWinType(615,36196
    bool isUsed(624,36440

wf/win_farm_gpu.hpp,1653
#define WIN_FARM_GPU_H39,1770
namespace wf 55,2124
template<typename tuple_t,68,2581
template<typename tuple_t, typename result_t,68,2581
template<typename tuple_t, typename result_t, typename win_F_t,68,2581
class Win_Farm_GPU:Win_Farm_GPU69,2663
    using pane_farm_gpu_t = Pane_Farm_GPU<tuple_t, result_t,73,2787
    using win_mapreduce_gpu_t = Win_MapReduce_GPU<tuple_t, result_t,75,2937
    using win_seq_gpu_t = Win_Seq_GPU<tuple_t, result_t,81,3196
    using win_seq_gpu_t = Win_Seq_GPU<tuple_t, result_t, win_F_t,81,3196
    template<typename T1,87,3508
    template<typename T1, typename T2,87,3508
    template<typename T1, typename T2, typename T3,87,3508
    template<typename T1,89,3605
    template<typename T1, typename T2,89,3605
    template<typename T1, typename T2, typename T3,89,3605
    bool hasComplexWorkers;95,3927
    opt_level_t outer_opt_level;97,4001
    opt_level_t inner_opt_level;99,4083
    pattern_t inner_type;101,4151
    size_t parallelism;103,4216
    size_t inner_parallelism_1;105,4290
    size_t inner_parallelism_2;106,4322
    win_type_t winType;108,4384
    bool used;109,4408
    Win_Farm_GPU(112,4515
    void optimize_WinFarmGPU(178,7686
    Win_Farm_GPU(228,10112
    Win_Farm_GPU(261,11921
    Win_Farm_GPU(363,18208
    bool useComplexNesting(453,23677
    opt_level_t getOptLevel(462,23904
    pattern_t getInnerType(471,24116
    opt_level_t getInnerOptLevel(480,24364
    size_t getParallelism(489,24585
    std::pair<std::pair498,24835
    std::pair<size_t, size_t> getInnerParallelism(498,24835
    win_type_t getWinType(507,25135
    bool isUsed(516,25387

wf/win_mapreduce.hpp,2045
#define WIN_MAPREDUCE_H39,1802
namespace wf 48,1962
template<typename tuple_t,61,2433
template<typename tuple_t, typename result_t,61,2433
class Win_MapReduce:Win_MapReduce62,2497
    template<typename T1,92,4343
    template<typename T1, typename T2,92,4343
    template<typename T1,94,4422
    map_func_t map_func;102,4686
    rich_map_func_t rich_map_func;103,4711
    mapupdate_func_t mapupdate_func;104,4746
    rich_mapupdate_func_t rich_mapupdate_func;105,4783
    reduce_func_t reduce_func;106,4830
    rich_reduce_func_t rich_reduce_func;107,4861
    reduceupdate_func_t reduceupdate_func;108,4902
    rich_reduceupdate_func_t rich_reduceupdate_func;109,4945
    closing_func_t closing_func;110,4998
    bool isNICMAP;111,5031
    bool isNICREDUCE;112,5050
    bool isRichMAP;113,5072
    bool isRichREDUCE;114,5092
    uint64_t win_len;115,5115
    uint64_t slide_len;116,5137
    uint64_t triggering_delay;117,5161
    win_type_t winType;118,5192
    size_t map_degree;119,5216
    size_t reduce_degree;120,5239
    std::string name;121,5265
    bool ordered;122,5287
    opt_level_t opt_level;123,5305
    PatternConfig config;124,5332
    bool used;125,5358
    bool used4Nesting;126,5435
    template <typename F_t,129,5546
    Win_MapReduce(130,5588
    const ff::ff_pipeline optimize_WinMapReduce(220,10515
    Win_MapReduce(269,13030
    Win_MapReduce(309,14992
    Win_MapReduce(349,16979
    Win_MapReduce(389,18975
    Win_MapReduce(429,20963
    Win_MapReduce(469,22976
    Win_MapReduce(509,25014
    Win_MapReduce(549,27063
    Win_MapReduce(589,29112
    Win_MapReduce(629,31091
    Win_MapReduce(669,33095
    Win_MapReduce(709,35110
    Win_MapReduce(749,37130
    Win_MapReduce(789,39111
    Win_MapReduce(829,41115
    Win_MapReduce(869,43130
    opt_level_t getOptLevel(897,44314
    win_type_t getWinType(906,44543
    size_t getMAPParallelism(915,44728
    size_t getREDUCEParallelism(924,44925
    bool isUsed(933,45189
    bool isUsed4Nesting(942,45425

wf/win_mapreduce_gpu.hpp,1845
#define WIN_MAPREDUCE_GPU_H43,2105
namespace wf 53,2297
template<typename tuple_t,67,2944
template<typename tuple_t, typename result_t,67,2944
template<typename tuple_t, typename result_t, typename F_t,67,2944
class Win_MapReduce_GPU:Win_MapReduce_GPU68,3022
    template<typename T1,88,4046
    template<typename T1, typename T2,88,4046
    template<typename T1, typename T2, typename T3,88,4046
    template<typename T1,90,4142
    template<typename T1, typename T2,90,4142
    F_t gpuFunction;98,4433
    map_func_t map_func;99,4454
    mapupdate_func_t mapupdate_func;100,4479
    reduce_func_t reduce_func;101,4516
    reduceupdate_func_t reduceupdate_func;102,4547
    bool isGPUMAP;103,4590
    bool isGPUREDUCE;104,4609
    bool isNICMAP;105,4631
    bool isNICREDUCE;106,4650
    uint64_t win_len;107,4672
    uint64_t slide_len;108,4694
    uint64_t triggering_delay;109,4718
    win_type_t winType;110,4749
    size_t map_degree;111,4773
    size_t reduce_degree;112,4796
    size_t batch_len;113,4822
    size_t n_thread_block;114,4844
    std::string name;115,4871
    size_t scratchpad_size;116,4893
    bool ordered;117,4921
    opt_level_t opt_level;118,4939
    PatternConfig config;119,4966
    bool used;120,4992
    bool used4Nesting;121,5069
    Win_MapReduce_GPU(124,5182
    Win_MapReduce_GPU(230,10964
    Win_MapReduce_GPU(336,16784
    Win_MapReduce_GPU(442,22564
    const ff::ff_pipeline optimize_WinMapReduceGPU(548,28425
    Win_MapReduce_GPU(599,31197
    Win_MapReduce_GPU(637,33391
    Win_MapReduce_GPU(675,35602
    Win_MapReduce_GPU(713,37795
    opt_level_t getOptLevel(737,38914
    win_type_t getWinType(746,39143
    size_t getMAPParallelism(755,39328
    size_t getREDUCEParallelism(764,39525
    bool isUsed(773,39797
    bool isUsed4Nesting(782,40041

wf/win_seq.hpp,2405
#define WIN_SEQ_H36,1580
namespace wf 50,1840
template<typename tuple_t,60,2093
template<typename tuple_t, typename result_t,60,2093
class Win_Seq:Win_Seq61,2157
    tuple_t tmp;84,3458
    template<typename T1,88,3666
    template<typename T1, typename T2,88,3666
    template<typename T1,90,3745
    template<typename T1,92,3811
    template<typename T1, typename T2,92,3811
    template<typename T1,94,3891
    template<typename T1, typename T2,94,3891
    template<typename T1,96,3975
    template<typename T1, typename T2,96,3975
    template<typename T1, typename T2, typename T3,96,3975
    template<typename T1,98,4072
    template<typename T1, typename T2,98,4072
    template<typename T1, typename T2, typename T3,98,4072
    struct Key_Descriptor101,4207
        archive_t archive;103,4239
        std::vector<win_t> wins;104,4299
        uint64_t emit_counter;105,4360
        uint64_t next_lwid;106,4443
        int64_t last_lwid;107,4518
        Key_Descriptor(110,4610
        Key_Descriptor(121,4986
    win_func_t win_func;128,5284
    rich_win_func_t rich_win_func;129,5363
    winupdate_func_t winupdate_func;130,5457
    rich_winupdate_func_t rich_winupdate_func;131,5544
    closing_func_t closing_func;132,5646
    compare_func_t compare_func;133,5699
    uint64_t win_len;134,5766
    uint64_t slide_len;135,5838
    uint64_t triggering_delay;136,5911
    win_type_t winType;137,6009
    std::string name;138,6059
    bool isNIC;139,6131
    bool isRich;140,6238
    RuntimeContext context;141,6311
    PatternConfig config;142,6357
    role_t role;143,6434
    std::unordered_map<std::unordered_map144,6474
    std::unordered_map<key_t, Key_Descriptor> keyMap;144,6474
    std::pair<std::pair145,6578
    size_t dropped_tuples;146,6681
    volatile unsigned long startTD,155,7001
    volatile unsigned long startTD, startTS,155,7001
    volatile unsigned long startTD, startTS, endTD,155,7001
    volatile unsigned long startTD, startTS, endTD, endTS;155,7001
    void init(160,7143
    void setMapIndexes(181,7997
    Win_Seq(201,8897
    Win_Seq(242,10428
    Win_Seq(283,11971
    Win_Seq(324,13529
    int svc_init(354,14436
    result_t *svc(svc380,15451
    void eosnotify(535,23486
    void svc_end(586,26017
    win_type_t getWinType(623,27801
    virtual int run(629,27934
    virtual int wait(635,28056

wf/win_seq_gpu.hpp,3546
#define WIN_SEQ_GPU_H38,1739
namespace wf 50,1956
__global__ void kernelBatch(56,2109
inline void gpuAssert(78,3051
template<typename tuple_t,100,3778
template<typename tuple_t, typename result_t,100,3778
template<typename tuple_t, typename result_t, typename win_F_t,100,3778
class Win_Seq_GPU:Win_Seq_GPU101,3860
    using input_iterator_t 105,3972
    using archive_t 107,4109
    using win_t 109,4229
    using compare_func_t 111,4317
    tuple_t tmp;112,4399
    using key_t 114,4451
    template<typename T1,116,4607
    template<typename T1, typename T2,116,4607
    template<typename T1, typename T2, typename T3,116,4607
    template<typename T1,118,4703
    template<typename T1, typename T2,118,4703
    template<typename T1,120,4786
    template<typename T1, typename T2,120,4786
    template<typename T1, typename T2, typename T3,120,4786
    template<typename T1,122,4883
    template<typename T1, typename T2,122,4883
    template<typename T1, typename T2, typename T3,122,4883
    struct Key_Descriptor125,5018
        archive_t archive;127,5050
        std::vector<win_t> wins;128,5110
        uint64_t emit_counter;129,5171
        uint64_t next_lwid;130,5254
        int64_t last_lwid;131,5329
        size_t batchedWin;132,5397
        std::vector<size_t> start,133,5464
        std::vector<size_t> start, end;133,5464
        std::vector<uint64_t> gwids;134,5583
        std::vector<uint64_t> tsWin;135,5680
        std::optional<tuple_t> start_tuple;136,5792
        std::optional<tuple_t> end_tuple;137,5894
        Key_Descriptor(140,6017
        Key_Descriptor(152,6431
    compare_func_t compare_func;167,7056
    uint64_t win_len;168,7123
    uint64_t slide_len;169,7195
    uint64_t triggering_delay;170,7268
    win_type_t winType;171,7366
    std::string name;172,7416
    PatternConfig config;173,7488
    role_t role;174,7569
    std::unordered_map<std::unordered_map175,7613
    std::unordered_map<key_t, Key_Descriptor> keyMap;175,7613
    std::pair<std::pair176,7717
    std::pair<size_t, size_t> map_indexes 176,7717
    size_t batch_len;177,7820
    size_t n_thread_block;178,7940
    size_t tuples_per_batch;179,7998
    win_F_t win_func;180,8079
    result_t *host_results host_results181,8139
    cudaStream_t cudaStream;183,8243
    size_t no_thread_block;184,8312
    tuple_t *Bin Bin185,8376
    result_t *Bout Bout186,8465
    size_t *gpu_start,gpu_start187,8557
    size_t *gpu_start, *gpu_end gpu_end187,8557
    uint64_t *gpu_gwids gpu_gwids188,8700
    size_t scratchpad_size 189,8813
    char *scratchpad_memory scratchpad_memory190,8917
    size_t dropped_tuples;191,9027
    bool isTriggering 193,9110
    unsigned long rcvTuples 194,9141
    unsigned long rcvTuplesTriggering 195,9174
    double avg_td_us 196,9261
    double avg_ts_us 197,9287
    double avg_ts_triggering_us 198,9313
    double avg_ts_non_triggering_us 199,9350
    volatile unsigned long startTD,200,9391
    volatile unsigned long startTD, startTS,200,9391
    volatile unsigned long startTD, startTS, endTD,200,9391
    volatile unsigned long startTD, startTS, endTD, endTS;200,9391
    std::ofstream *logfile logfile201,9450
    Win_Seq_GPU(205,9523
    void setMapIndexes(258,11741
    Win_Seq_GPU(277,12707
    int svc_init(292,13334
    result_t *svc(svc344,15981
    void eosnotify(551,27800
    void svc_end(599,30345
    win_type_t getWinType(636,31899
    virtual int run(642,32032
    virtual int wait(648,32154

wf/windflow.hpp,27
#define WINDFLOW_H30,1127

wf/windflow_gpu.hpp,31
#define WINDFLOW_GPU_H31,1214

wf/window.hpp,1432
#define WINDOW_H32,1242
    namespace std 39,1385
namespace wf 45,1549
class Triggerer_CB48,1615
    uint64_t win_len;51,1645
    uint64_t slide_len;52,1704
    uint64_t lwid;53,1764
    uint64_t initial_id;54,1831
    Triggerer_CB(58,1917
    win_event_t operator()(operator()69,2290
class Triggerer_TB81,2613
    uint64_t win_len;84,2643
    uint64_t slide_len;85,2696
    uint64_t lwid;86,2750
    uint64_t starting_ts;87,2817
    uint64_t triggering_delay;88,2865
    Triggerer_TB(92,2958
    win_event_t operator()(operator()105,3432
template<typename tuple_t,119,3828
class Window120,3874
    using triggerer_t 124,3934
    tuple_t tmp;125,3996
    using key_t 127,4048
    key_t key;128,4151
    uint64_t lwid;129,4183
    uint64_t gwid;130,4257
    triggerer_t triggerer;131,4332
    win_type_t winType;132,4428
    size_t no_tuples;133,4485
    bool batched;134,4561
    result_t result;135,4632
    std::optional<tuple_t> firstTuple;136,4688
    std::optional<tuple_t> lastTuple;137,4727
    Window(141,4794
    Window(164,5472
    win_event_t onTuple(179,5899
    void setBatched(236,8255
    result_t &getResult(getResult242,8364
    std::optional<tuple_t> getFirstTuple(248,8485
    std::optional<tuple_t> getLastTuple(254,8632
    size_t getKEY(260,8759
    uint64_t getLWID(266,8867
    uint64_t getGWID(272,8980
    size_t getSize(278,9128
    bool isBatched(284,9251

wf/wm_nodes.hpp,1296
#define WM_NODES_H31,1335
namespace wf 39,1469
template<typename tuple_t,42,1509
template<typename tuple_t, typename input_t=42,1509
    struct Key_Descriptor54,2014
        uint64_t rcv_counter;56,2046
        tuple_t last_tuple;57,2117
        size_t nextDst;58,2225
        Key_Descriptor(61,2331
class WinMap_Dropper:WinMap_Dropper180,6662
    using wrapper_in_t 184,6811
    tuple_t tmp;185,6862
    using key_t 187,6914
    size_t map_degree;188,7017
    struct Key_Descriptor190,7108
        size_t nextDst;192,7140
        Key_Descriptor(195,7246
    std::unordered_map<std::unordered_map197,7315
    std::unordered_map<key_t, Key_Descriptor> keyMap;197,7315
    size_t my_id;198,7419
    WinMap_Dropper(202,7538
    int svc_init(209,7755
    wrapper_in_t *svc(svc215,7858
    void svc_end(250,9180
class WinMap_Collector:WinMap_Collector255,9260
    result_t tmp;258,9338
    using key_t 260,9391
    struct Key_Descriptor262,9534
        uint64_t next_win;264,9566
        std::deque<result_t *> resultsSet;265,9638
        Key_Descriptor(268,9751
    std::unordered_map<std::unordered_map271,9864
    std::unordered_map<key_t, Key_Descriptor> keyMap;271,9864
    int svc_init(275,9985
    result_t *svc(svc281,10088
    void svc_end(317,11506

wf/doxygen-mainpage.hpp,0
